name: Deploy Function App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: func-pdfai-dev-tjqwgu4v
  AZURE_FUNCTIONAPP_PACKAGE_PATH: src/mcp-server
  RESOURCE_GROUP: pdf-ai-agent-rg-dev
  AZURE_SUBSCRIPTION_ID: d4d5edc0-d0d0-491c-8d55-4bf5481b5b49

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
         node-version: '18.x'
         # Remove cache and cache-dependency-path to avoid caching issues

    - name: npm install and build
      run: |
        cd src/mcp-server
        npm install
        npm run build

    - name: 'Deploy app to Azure Functions'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

    - name: Install Az PowerShell Module
      shell: pwsh
      run: |
        # Install Az module if not already present
        if (-not (Get-Module -ListAvailable -Name Az)) {
          Install-Module -Name Az -AllowClobber -Force -Scope CurrentUser
        }
    
        # Import the module
        Import-Module Az

    - name: Login to Azure with Service Principal
     shell: pwsh
     run: |
       $jsonCredentials = '${{ secrets.AZURE_CREDENTIALS }}' | ConvertFrom-Json
       $servicePrincipalId = $jsonCredentials.clientId
       $servicePrincipalKey = $jsonCredentials.clientSecret
       $tenantId = $jsonCredentials.tenantId

       $securePassword = ConvertTo-SecureString $servicePrincipalKey -AsPlainText -Force
       $credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $servicePrincipalId, $securePassword

       Connect-AzAccount -ServicePrincipal -Credential $credential -Tenant $tenantId
       Set-AzContext -Subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy Bicep infrastructure
      shell: pwsh
      run: |
        New-AzResourceGroupDeployment `
          -ResourceGroupName ${{ env.RESOURCE_GROUP }} `
          -TemplateFile "infrastructure/bicep/main.bicep" `
          -TemplateParameterFile "environments/dev/parameters.dev.json" `
          -Verbose