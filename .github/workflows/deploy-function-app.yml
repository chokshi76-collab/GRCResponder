name: Deploy Function App

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './src/mcp-server'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # CRITICAL FIX: Pin Azure CLI to version 2.72.0 to avoid "content consumed" error
    - name: Setup Azure CLI (Fixed Version)
      run: |
        # Remove existing Azure CLI
        sudo apt-get remove -y azure-cli
        # Install specific version 2.72.0
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        sudo apt-get install azure-cli=2.72.0-1~jammy
        # Prevent auto-upgrade
        sudo apt-mark hold azure-cli
        az version

    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set environment variables
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "ENVIRONMENT=prod" >> $GITHUB_ENV
          echo "RESOURCE_GROUP=pdf-ai-agent-rg-prod" >> $GITHUB_ENV
        elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
          echo "ENVIRONMENT=qa" >> $GITHUB_ENV
          echo "RESOURCE_GROUP=pdf-ai-agent-rg-qa" >> $GITHUB_ENV
        else
          echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          echo "RESOURCE_GROUP=pdf-ai-agent-rg-dev" >> $GITHUB_ENV
        fi

    - name: Deploy Infrastructure
      run: |
        echo "Deploying to environment: $ENVIRONMENT"
        echo "Resource Group: $RESOURCE_GROUP"
        
        # Deploy with fixed Azure CLI version
        az deployment group create \
          --resource-group $RESOURCE_GROUP \
          --template-file infrastructure/bicep/main.bicep \
          --parameters @environments/$ENVIRONMENT/parameters.$ENVIRONMENT.json \
          --verbose

    - name: Get Function App Name (PowerShell)
      id: get-function-name
      run: |
        FUNCTION_NAME=$(pwsh -Command "
        \$deployment = Get-AzResourceGroupDeployment -ResourceGroupName '$RESOURCE_GROUP' -Name 'main'
        \$deployment.Outputs.functionAppName.Value
        ")
        echo "function-name=$FUNCTION_NAME" >> $GITHUB_OUTPUT
        echo "Function App Name: $FUNCTION_NAME"

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/package-lock.json

    - name: Install dependencies and build
      working-directory: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
      run: |
        npm ci
        npm run build

    - name: Deploy Function App
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ steps.get-function-name.outputs.function-name }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

    - name: Verify Deployment
      run: |
        FUNCTION_NAME="${{ steps.get-function-name.outputs.function-name }}"
        echo "Waiting for Function App to be ready..."
        sleep 30
        
        # Test health endpoint
        curl -f "https://$FUNCTION_NAME.azurewebsites.net/api/health" || echo "Health check failed"
        
        # Test tools endpoint
        curl -f "https://$FUNCTION_NAME.azurewebsites.net/api/tools" || echo "Tools endpoint failed"